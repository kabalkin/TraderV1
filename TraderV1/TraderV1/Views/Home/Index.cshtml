@{
    ViewData["Title"] = "Home Page";
}


<button id="startBtn" class="btn">Start</button>
<button id="stopBtn" class="btn">Stop</button>


<div id="testik">
    
    </div>



<div id="chartdiv"></div>

<div id="console">
    
</div>



<script>
    var chartData = [];
  
    
    let hubUrl = 'http://localhost:5000/message';
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl(hubUrl)
        .configureLogging(signalR.LogLevel.Information)
        .build();
 
    hubConnection.on("Send", function (data) {               
        $.notify(data, "info");
    });


    hubConnection.on("SendToConsole",
        function(data) {
            if (true) {
                var con = $('#console');
                var currentHtml = $(con).html();
                var newHtml = currentHtml + '<br>' + data;
                $(con).html(newHtml);
                
                
                var block = document.getElementById("console");
                block.scrollTop = block.scrollHeight;
                
                
                
            }
        });
    
    
    hubConnection.on("SendData", function (data) {
      var newObj = JSON.parse(data);
      var date = Date.parse(newObj.dateTome);       
    
      chartData.push( {
        "date": date,
        "value": newObj.coast
        });

        var firstDate = new Date(date);

        chartEvents.push({ //this is overwriting the array each time. if you want to just add to it, use push.
            date: firstDate,
            type: "sign",
            backgroundColor: "#85CDE6",
            text: "S",
            graph: "g1",
            description: "Some longer\ntext can also\n be added"
        });

        chart.dataSets[0].stockEvents = chartEvents; 

     
      chart.validateData();
      
      $('#testik').html(newObj.dateTome + '   '  + newObj.coast);
    });
         

 
    hubConnection.start();
    

    $('#startBtn').click(function () {
        $.ajax({
                url: '@Url.Action("Start","Home")',
                type: 'POST',
                dataType: 'json'

            })
            .success(function(result) {

            });                
    });
    
    
    $('#stopBtn').click(function () {
      $.ajax({
          url: '@Url.Action("StopProcces","Home")',
          type: 'POST',
          dataType: 'json'

        })
        .success(function(result) {

        });
                

    });
    
    var chartData = [];
    var chartEvents = [];
        

    var chart = AmCharts.makeChart("chartdiv", {
        "type": "stock",
        "theme": "dark",
        "zoomOutOnDataSetChange":true,
        "categoryAxesSettings": {
            "minPeriod": "ss"
        },
        "dataSets": [{
            "color": "#b0de09",
            "fieldMappings": [{
                "fromField": "value",
                "toField": "value"
            }, {
                "fromField": "volume",
                "toField": "volume"
            }],
            "dataProvider": chartData,
            "categoryField": "date",     
            // EVENTS
            
        }],


        "panels": [{
            "title": "Value",
            "stockGraphs": [{
                "id": "g1",
                "valueField": "value"
            }],
            "stockLegend": {
                "valueTextRegular": " ",
                "markerType": "none"
            }
        }],

        "chartScrollbarSettings": {
            "graph": "g1"
        },

        "chartCursorSettings": {
            "valueBalloonsEnabled": true,
            "graphBulletSize": 1,
            "valueLineBalloonEnabled": true,
            "valueLineEnabled": true,
            "valueLineAlpha": 0.5
        },

        "periodSelector": {
            "periods": [{
                "period": "DD",
                "count": 1,
                "label": "day"
            }, {
                "period": "mm",
                "count": 1,
                "label": "minute"
            },  {
                "period": "MAX",
                "label": "MAX"
            }]
        },

        "panelsSettings": {
            "usePrefixes": true
        },
        "export": {
            "enabled": true
        }
    });
    
</script>
    








